steps:
# 1. Create a Docker image containing flink-bigquery-connector repo
  - name: 'gcr.io/cloud-builders/docker'
    id: 'docker-build'
    args: ['build', '--tag=gcr.io/$PROJECT_ID/dataproc-flink-bigquery-connector-nightly', '-f', 'cloudbuild/nightly-job/Dockerfile', '.']

# 2. Fetch maven and dependencies
  - name: 'gcr.io/$PROJECT_ID/dataproc-flink-bigquery-connector-nightly'
    id: 'init'
    waitFor: ['docker-build']
    entrypoint: 'bash'
    args: ['/workspace/cloudbuild/nightly-job/nightly.sh', 'init']
    env:
      - 'GCS_JAR_LOCATION=${_GCS_JAR_LOCATION}'
      - 'MVN_JAR_LOCATION=${_MVN_JAR_LOCATION}'

# 3. Create the dataproc cluster
  - name: 'gcr.io/$PROJECT_ID/dataproc-flink-bigquery-connector-nightly'
    id: 'create-clusters'
    waitFor: ['init']
    entrypoint: 'bash'
    args: ['/workspace/cloudbuild/nightly-job/nightly.sh', 'create_clusters']
    env:
      - 'PROJECT_ID=${_PROJECT_ID}'
      - 'DATAPROC_IMAGE_VERSION=${_DATAPROC_IMAGE_VERSION}'
      - 'NUM_WORKERS_SMALL_TEST=${_NUM_WORKERS_SMALL_TEST}'
      - 'ZONE_SMALL_TEST=${_ZONE_SMALL_TEST}'
      - 'REGION_SMALL_TEST=${_REGION_SMALL_TEST}'
      - 'CLUSTER_NAME_SMALL_TEST=${_CLUSTER_NAME_SMALL_TEST}'
      - 'PROPERTIES_SMALL_TEST=${_PROPERTIES_SMALL_TEST}'
      - 'NUM_WORKERS_UNBOUNDED_TABLE_TEST=${_NUM_WORKERS_UNBOUNDED_TABLE_TEST}'
      - 'ZONE_UNBOUNDED_TABLE_TEST=${_ZONE_UNBOUNDED_TABLE_TEST}'
      - 'REGION_UNBOUNDED_TABLE_TEST=${_REGION_UNBOUNDED_TABLE_TEST}'
      - 'CLUSTER_NAME_UNBOUNDED_TABLE_TEST=${_CLUSTER_NAME_UNBOUNDED_TABLE_TEST}'
      - 'PROPERTIES_UNBOUNDED_TABLE_TEST=${_PROPERTIES_UNBOUNDED_TABLE_TEST}'
      - 'TEMP_BUCKET_SMALL_TEST=${_TEMP_BUCKET_SMALL_TEST}'
      - 'STAGING_BUCKET_SMALL_TEST=${_STAGING_BUCKET_SMALL_TEST}'
      - 'TEMP_BUCKET_UNBOUNDED_TABLE_TEST=${_TEMP_BUCKET_UNBOUNDED_TABLE_TEST}'
      - 'STAGING_BUCKET_UNBOUNDED_TABLE_TEST=${_STAGING_BUCKET_UNBOUNDED_TABLE_TEST}'


# 4. Start the simple e2e tests
  - name: 'gcr.io/$PROJECT_ID/dataproc-flink-bigquery-connector-nightly'
    id: 'e2e-bounded-read-tests'
    waitFor: ['create-clusters']
    entrypoint: 'bash'
    args: ['/workspace/cloudbuild/nightly-job/nightly.sh', 'e2e_bounded_read_tests']
    env:
      - 'GCS_JAR_LOCATION=${_GCS_JAR_LOCATION}'
      - 'PROJECT_ID=${_PROJECT_ID}'
      - 'REGION_SMALL_TEST=${_REGION_SMALL_TEST}'
      - 'CLUSTER_NAME_SMALL_TEST=${_CLUSTER_NAME_SMALL_TEST}'
      - 'PROJECT_NAME=${_PROJECT_NAME}'
      - 'DATASET_NAME=${_DATASET_NAME}'
      - 'TABLE_NAME_SIMPLE_TABLE=${_TABLE_NAME_SIMPLE_TABLE}'
      - 'AGG_PROP_NAME_SIMPLE_TABLE=${_AGG_PROP_NAME_SIMPLE_TABLE}'
      - 'TABLE_NAME_COMPLEX_SCHEMA_TABLE=${_TABLE_NAME_COMPLEX_SCHEMA_TABLE}'
      - 'AGG_PROP_NAME_COMPLEX_SCHEMA_TABLE=${_AGG_PROP_NAME_COMPLEX_SCHEMA_TABLE}'
      - 'QUERY=${_QUERY}'
      - 'TABLE_NAME_LARGE_TABLE=${_TABLE_NAME_LARGE_TABLE}'
      - 'AGG_PROP_NAME_LARGE_TABLE=${_AGG_PROP_NAME_LARGE_TABLE}'

# 5. Start the unbounded source table e2e test
  - name: 'gcr.io/$PROJECT_ID/dataproc-flink-bigquery-connector-nightly'
    id: 'e2e-unbounded-read-test'
    waitFor: ['create-clusters']
    entrypoint: 'bash'
    args: ['/workspace/cloudbuild/nightly-job/nightly.sh', 'e2e_unbounded_read_test']
    env:
      - 'GCS_JAR_LOCATION=${_GCS_JAR_LOCATION}'
      - 'PROJECT_ID=${_PROJECT_ID}'
      - 'REGION_UNBOUNDED_TABLE_TEST=${_REGION_UNBOUNDED_TABLE_TEST}'
      - 'CLUSTER_NAME_UNBOUNDED_TABLE_TEST=${_CLUSTER_NAME_UNBOUNDED_TABLE_TEST}'
      - 'PROJECT_NAME=${_PROJECT_NAME}'
      - 'DATASET_NAME=${_DATASET_NAME}'
      - 'TABLE_NAME_UNBOUNDED_TABLE=${_TABLE_NAME_UNBOUNDED_TABLE}'
      - 'AGG_PROP_NAME_UNBOUNDED_TABLE=${_AGG_PROP_NAME_UNBOUNDED_TABLE}'
      - 'PARTITION_DISCOVERY_INTERVAL=${_PARTITION_DISCOVERY_INTERVAL}'
      - 'TS_PROP_NAME=${_TS_PROP_NAME}'

# Maximum tolerance 60 minutes.
timeout: 3600s
logsBucket: '${_LOGS_BUCKET}'

options:
  machineType: 'N1_HIGHCPU_32'

